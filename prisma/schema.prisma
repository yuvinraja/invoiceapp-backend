// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(uuid())
  email     String        @unique
  password  String
  name      String?
  company   String
  gstin     String?
  phone     String?
  mobile    String?
  address   String?
  city      String?
  state     String?
  pincode   String?
  logoUrl   String?

  bankDetail   BankDetail?
  settings     UserSettings?

  invoices     Invoice[]
  clients      Client[]

  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model BankDetail {
  id        String   @id @default(uuid())
  userId    String   @unique
  bankName  String
  branch    String
  accountNo String
  ifscCode  String

  user      User     @relation(fields: [userId], references: [id])
}

model UserSettings {
  id           String   @id @default(uuid())
  userId       String   @unique
  terms        String?

  user         User     @relation(fields: [userId], references: [id])
}

model Client {
  id        String    @id @default(uuid())
  userId    String
  name      String
  gstin     String?
  address   String?
  city      String?
  state     String?
  pincode   String?

  user      User      @relation(fields: [userId], references: [id])
  invoices  Invoice[]

  createdAt DateTime  @default(now())
}

model Invoice {
  id             String     @id @default(uuid())
  userId         String
  clientId       String?

  invoiceNumber  Int
  invoiceType    InvoiceType  // 'TAX' or 'PROFORMA'
  taxType        TaxType      // 'CGST_SGST' or 'IGST'

  invoiceDate    DateTime
  dueDate        DateTime?

  poNumber       String?
  vehicleNumber  String?
  transporter    String?
  bundleCount    Int?

  notes          String?

  subtotal       Float
  cgst           Float?       // null if IGST
  sgst           Float?
  igst           Float?       // null if CGST/SGST
  total          Float
  roundedTotal   Float

  items          Item[]
  user           User         @relation(fields: [userId], references: [id])
  client         Client?      @relation(fields: [clientId], references: [id])

  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Item {
  id           String   @id @default(uuid())
  invoiceId    String
  description  String
  hsnCode      String?
  quantity     Int
  rate         Float
  amount       Float      // Pre-calculated line item total

  invoice      Invoice   @relation(fields: [invoiceId], references: [id])
}

enum InvoiceType {
  TAX
  PROFORMA
}

enum TaxType {
  CGST_SGST
  IGST
}
